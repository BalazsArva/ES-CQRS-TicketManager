{
	"info": {
		"name": "CQRSTicketManager",
		"_postman_id": "de9a47cb-3662-0a0b-36e9-09261462d2ab",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Environment",
			"description": "",
			"item": [
				{
					"name": "GET PopulateExistingTicketIds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae460bab-72fa-4f72-a324-1698b7233613",
								"type": "text/javascript",
								"exec": [
									"pm.environment.unset(\"ticketIds\");",
									"",
									"if (pm.response.code == 404) {",
									"    pm.globals.set(\"ticketIds\", []);",
									"} else if (pm.response.code == 200) {",
									"    var responseJson = pm.response.json();",
									"    var ids = responseJson.pagedResults.map((item) => item.id);",
									"",
									"    pm.globals.set(\"ticketIds\", ids);",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{apiBaseUrl}}/api/ticketqueries?orderBy=Id&pageSize=1000",
							"host": [
								"{{apiBaseUrl}}"
							],
							"path": [
								"api",
								"ticketqueries"
							],
							"query": [
								{
									"key": "orderBy",
									"value": "Id",
									"equals": true
								},
								{
									"key": "pageSize",
									"value": "1000",
									"equals": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET BaconIpsum descriptions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5f2f4ac-d051-4b94-b3ce-e149927ece5a",
								"type": "text/javascript",
								"exec": [
									"pm.environment.unset(\"descriptions\");",
									"",
									"if (pm.response.code == 200) {",
									"    var paragraphs = pm.response.json();",
									"",
									"    pm.globals.set(\"descriptions\", paragraphs);",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "https://baconipsum.com/api/?type=meat-and-filler&paras=100",
							"protocol": "https",
							"host": [
								"baconipsum",
								"com"
							],
							"path": [
								"api",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "meat-and-filler",
									"equals": true
								},
								{
									"key": "paras",
									"value": "100",
									"equals": true
								}
							]
						},
						"description": "Get BaconIpsum texts for descriptions."
					},
					"response": []
				},
				{
					"name": "GET BaconIpsum titles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1727c4f-2f9e-48bc-8c9c-df6c1054c731",
								"type": "text/javascript",
								"exec": [
									"pm.environment.unset(\"titles\");",
									"",
									"if (pm.response.code == 200) {",
									"    var response = pm.response.json();",
									"    var text = response[0];",
									"    var sentences = text.split('.').map(item => item.trim());",
									"",
									"    pm.globals.set(\"titles\", sentences);",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "https://baconipsum.com/api/?type=meat-and-filler&sentences=100",
							"protocol": "https",
							"host": [
								"baconipsum",
								"com"
							],
							"path": [
								"api",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "meat-and-filler",
									"equals": true
								},
								{
									"key": "sentences",
									"value": "100",
									"equals": true
								}
							]
						},
						"description": "Get title placeholder sentences from BaconIpsum"
					},
					"response": []
				},
				{
					"name": "Configure environment",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8c0106c7-fd88-4956-92a5-964c9ab7c40f",
								"type": "text/javascript",
								"exec": [
									"pm.globals.set(\"apiBaseUrl\", \"http://localhost:54067\");"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{apiBaseUrl}}",
							"host": [
								"{{apiBaseUrl}}"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "POST Create ticket",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fefcb814-d62c-41af-ad08-de27d3d53e84",
						"type": "text/javascript",
						"exec": [
							"var existingTicketIds = pm.globals.get(\"ticketIds\");",
							"var descriptions = pm.globals.get(\"descriptions\");",
							"var titles = pm.globals.get(\"titles\");",
							"",
							"var users = ['Amelia', 'Margaret', 'Emma', 'Mary', 'Olivia', 'Samantha', 'Olivia', 'Patricia', 'Isla', 'Bethany', 'Sophia', 'Jennifer', 'Emily', 'Elizabeth', 'Isabella', 'Elizabeth', 'Poppy', 'Joanne', 'Ava', 'Linda', 'Ava', 'Megan', 'Mia', 'Barbara', 'Isabella', 'Victoria', 'Emily', 'Susan', 'Jessica', 'Lauren', 'Abigail', 'Margaret', 'Lily', 'Michelle', 'Madison', 'Jessica', 'Sophie', 'Tracy', 'Charlotte', 'Sarah', 'Oliver', 'Jake', 'Noah', 'James', 'Jack', 'Connor', 'Liam', 'John', 'Harry', 'Callum', 'Mason', 'Robert', 'Jacob', 'Jacob', 'Jacob', 'Michael', 'Charlie', 'Kyle', 'William', 'William', 'Thomas', 'Joe', 'Ethan', 'David', 'George', 'Reece', 'Michael', 'Richard', 'Oscar', 'Rhys', 'Alexander', 'Joseph', 'James', 'Charlie', 'James', 'Charles', 'William', 'Damian', 'Daniel', 'Thomas'];",
							"var usersAndNull = users.concat([null]);",
							"",
							"var statuses = ['NotStarted', 'InProgress', 'Blocked', 'InTest', 'UnderReview', 'Done', 'Removed'];",
							"var priorities = ['Lowest', 'Low', 'Medium', 'High', 'Highest'];",
							"var ticketTypes = ['Task', 'Bug'];",
							"var linkTypes = ['RelatedTo', 'DuplicatedBy', 'ClonedBy', 'PartOf', 'BlockedBy'];",
							"",
							"var tagGroups = [",
							"    ['PoC', 'SPIKE', 'Feasibility'],",
							"    ['Test', 'QA', 'Regression', 'Unit-Test', 'Mock', 'E2E', 'Integration-Test', 'Performance-Test', 'Regression-Test'],",
							"    ['Dev', 'Backend', 'Architecture', 'Performance', 'Database', 'PoC', 'Communication'],",
							"    ['Frontend', 'Design', 'UI', 'UX', 'Accessibility', 'PoC', 'Layout', 'SEO', 'Localization']",
							"];",
							"",
							"function getRandomArrayItem(array) {",
							"    if (!array || !array.length) {",
							"        return null;",
							"    }",
							"",
							"    var index = Math.floor(Math.random() * array.length);",
							"    return array[index];",
							"}",
							"",
							"function getRandomTicketLinks() {",
							"    if (!existingTicketIds.length) {",
							"        return [];",
							"    }",
							"",
							"    var result = [];",
							"    var maxCount = Math.round(Math.random() * 10);",
							"",
							"    for (var i = 0; i < maxCount; ++i) {",
							"        var targetTicketId = getRandomArrayItem(existingTicketIds);",
							"        var linkType = getRandomArrayItem(linkTypes);",
							"",
							"        if (!result.some(item => item.targetTicketId == targetTicketId && item.linkType == linkType)) {",
							"            result.push({",
							"                targetTicketId: targetTicketId,",
							"                linkType: linkType",
							"            });",
							"        }",
							"    }",
							"",
							"    return result;",
							"}",
							"",
							"function getRandomTags() {",
							"    var groupIndex = Math.floor(Math.random() * tagGroups.length);",
							"    var tagGroup = tagGroups[groupIndex];",
							"    var count = Math.random() * 10;",
							"",
							"    var set = {};",
							"    for (var i = 0; i < count; ++i) {",
							"        var key = getRandomArrayItem(tagGroup);",
							"",
							"        set[key] = true;",
							"    }",
							"",
							"    return Object.keys(set);",
							"}",
							"",
							"pm.globals.set(\"creator\", getRandomArrayItem(users));",
							"pm.globals.set(\"assignTo\", getRandomArrayItem(usersAndNull));",
							"",
							"pm.globals.set(\"status\", getRandomArrayItem(statuses));",
							"pm.globals.set(\"priority\", getRandomArrayItem(priorities));",
							"pm.globals.set(\"ticketType\", getRandomArrayItem(ticketTypes));",
							"",
							"pm.globals.set(\"links\", JSON.stringify(getRandomTicketLinks()));",
							"pm.globals.set(\"tags\", JSON.stringify(getRandomTags()));",
							"",
							"pm.globals.set(\"description\", getRandomArrayItem(descriptions));",
							"pm.globals.set(\"title\", getRandomArrayItem(titles));",
							"pm.globals.set(\"storyPoints\", Math.round(Math.random() * 10));"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"raisedByUser\": \"{{creator}}\",\r\n    \"assignTo\": \"{{assignTo}}\",\r\n    \"title\": \"{{title}}\",\r\n    \"description\": \"{{description}}\",\r\n    \"tags\": {{tags}},\r\n    \"storyPoints\": {{storyPoints}},\r\n    \"priority\": \"{{priority}}\",\r\n    \"ticketType\": \"{{ticketType}}\",\r\n    \"ticketStatus\": \"{{status}}\",\r\n    \"links\": {{links}}\r\n}"
				},
				"url": {
					"raw": "{{apiBaseUrl}}/api/ticketcommands",
					"host": [
						"{{apiBaseUrl}}"
					],
					"path": [
						"api",
						"ticketcommands"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "PATCH Assign ticket",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f7418b93-e4ba-4bd0-a3b5-dcb651dc7152",
						"type": "text/javascript",
						"exec": [
							"var existingTicketIds = pm.globals.get(\"ticketIds\");",
							"",
							"var users = ['Amelia', 'Margaret', 'Emma', 'Mary', 'Olivia', 'Samantha', 'Olivia', 'Patricia', 'Isla', 'Bethany', 'Sophia', 'Jennifer', 'Emily', 'Elizabeth', 'Isabella', 'Elizabeth', 'Poppy', 'Joanne', 'Ava', 'Linda', 'Ava', 'Megan', 'Mia', 'Barbara', 'Isabella', 'Victoria', 'Emily', 'Susan', 'Jessica', 'Lauren', 'Abigail', 'Margaret', 'Lily', 'Michelle', 'Madison', 'Jessica', 'Sophie', 'Tracy', 'Charlotte', 'Sarah', 'Oliver', 'Jake', 'Noah', 'James', 'Jack', 'Connor', 'Liam', 'John', 'Harry', 'Callum', 'Mason', 'Robert', 'Jacob', 'Jacob', 'Jacob', 'Michael', 'Charlie', 'Kyle', 'William', 'William', 'Thomas', 'Joe', 'Ethan', 'David', 'George', 'Reece', 'Michael', 'Richard', 'Oscar', 'Rhys', 'Alexander', 'Joseph', 'James', 'Charlie', 'James', 'Charles', 'William', 'Damian', 'Daniel', 'Thomas'];",
							"var usersAndNull = users.concat([null]);",
							"",
							"function getRandomArrayItem(array) {",
							"    if (!array || !array.length) {",
							"        return null;",
							"    }",
							"",
							"    var index = Math.floor(Math.random() * array.length);",
							"    return array[index];",
							"}",
							"",
							"pm.globals.set(\"raisedByUser\", getRandomArrayItem(users));",
							"pm.globals.set(\"assignTo\", getRandomArrayItem(usersAndNull));",
							"pm.globals.set(\"ticketId\", getRandomArrayItem(existingTicketIds));"
						]
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"raisedByUser\": \"{{raisedByUser}}\",\r\n    \"assignTo\": \"{{assignTo}}\"\r\n}"
				},
				"url": {
					"raw": "{{apiBaseUrl}}/api/ticketcommands/{{ticketId}}/assignment",
					"host": [
						"{{apiBaseUrl}}"
					],
					"path": [
						"api",
						"ticketcommands",
						"{{ticketId}}",
						"assignment"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "PATCH Change ticket story points",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d5a3d3ff-5a3c-495c-8fdd-4ce2805a2b05",
						"type": "text/javascript",
						"exec": [
							"var existingTicketIds = pm.globals.get(\"ticketIds\");",
							"",
							"var users = ['Amelia', 'Margaret', 'Emma', 'Mary', 'Olivia', 'Samantha', 'Olivia', 'Patricia', 'Isla', 'Bethany', 'Sophia', 'Jennifer', 'Emily', 'Elizabeth', 'Isabella', 'Elizabeth', 'Poppy', 'Joanne', 'Ava', 'Linda', 'Ava', 'Megan', 'Mia', 'Barbara', 'Isabella', 'Victoria', 'Emily', 'Susan', 'Jessica', 'Lauren', 'Abigail', 'Margaret', 'Lily', 'Michelle', 'Madison', 'Jessica', 'Sophie', 'Tracy', 'Charlotte', 'Sarah', 'Oliver', 'Jake', 'Noah', 'James', 'Jack', 'Connor', 'Liam', 'John', 'Harry', 'Callum', 'Mason', 'Robert', 'Jacob', 'Jacob', 'Jacob', 'Michael', 'Charlie', 'Kyle', 'William', 'William', 'Thomas', 'Joe', 'Ethan', 'David', 'George', 'Reece', 'Michael', 'Richard', 'Oscar', 'Rhys', 'Alexander', 'Joseph', 'James', 'Charlie', 'James', 'Charles', 'William', 'Damian', 'Daniel', 'Thomas'];",
							"",
							"function getRandomArrayItem(array) {",
							"    if (!array || !array.length) {",
							"        return null;",
							"    }",
							"",
							"    var index = Math.floor(Math.random() * array.length);",
							"    return array[index];",
							"}",
							"",
							"pm.globals.set(\"raisedByUser\", getRandomArrayItem(users));",
							"pm.globals.set(\"storyPoints\", Math.round(Math.random() * 10));",
							"pm.globals.set(\"ticketId\", getRandomArrayItem(existingTicketIds));"
						]
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"raisedByUser\": \"{{raisedByUser}}\",\r\n    \"storyPoints\": {{storyPoints}}\r\n}"
				},
				"url": {
					"raw": "{{apiBaseUrl}}/api/ticketcommands/{{ticketId}}/storyPoints",
					"host": [
						"{{apiBaseUrl}}"
					],
					"path": [
						"api",
						"ticketcommands",
						"{{ticketId}}",
						"storyPoints"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "PATCH Change ticket title",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "89d030bf-ac21-4931-ab2c-38a75a9726dc",
						"type": "text/javascript",
						"exec": [
							"var existingTicketIds = pm.globals.get(\"ticketIds\");",
							"var titles = pm.globals.get(\"titles\");",
							"",
							"var users = ['Amelia', 'Margaret', 'Emma', 'Mary', 'Olivia', 'Samantha', 'Olivia', 'Patricia', 'Isla', 'Bethany', 'Sophia', 'Jennifer', 'Emily', 'Elizabeth', 'Isabella', 'Elizabeth', 'Poppy', 'Joanne', 'Ava', 'Linda', 'Ava', 'Megan', 'Mia', 'Barbara', 'Isabella', 'Victoria', 'Emily', 'Susan', 'Jessica', 'Lauren', 'Abigail', 'Margaret', 'Lily', 'Michelle', 'Madison', 'Jessica', 'Sophie', 'Tracy', 'Charlotte', 'Sarah', 'Oliver', 'Jake', 'Noah', 'James', 'Jack', 'Connor', 'Liam', 'John', 'Harry', 'Callum', 'Mason', 'Robert', 'Jacob', 'Jacob', 'Jacob', 'Michael', 'Charlie', 'Kyle', 'William', 'William', 'Thomas', 'Joe', 'Ethan', 'David', 'George', 'Reece', 'Michael', 'Richard', 'Oscar', 'Rhys', 'Alexander', 'Joseph', 'James', 'Charlie', 'James', 'Charles', 'William', 'Damian', 'Daniel', 'Thomas'];",
							"",
							"function getRandomArrayItem(array) {",
							"    if (!array || !array.length) {",
							"        return null;",
							"    }",
							"",
							"    var index = Math.floor(Math.random() * array.length);",
							"    return array[index];",
							"}",
							"",
							"pm.globals.set(\"raisedByUser\", getRandomArrayItem(users));",
							"pm.globals.set(\"ticketId\", getRandomArrayItem(existingTicketIds));",
							"pm.globals.set(\"title\", getRandomArrayItem(titles));"
						]
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"raisedByUser\": \"{{raisedByUser}}\",\r\n    \"title\": \"{{title}}\"\r\n}"
				},
				"url": {
					"raw": "{{apiBaseUrl}}/api/ticketcommands/{{ticketId}}/title",
					"host": [
						"{{apiBaseUrl}}"
					],
					"path": [
						"api",
						"ticketcommands",
						"{{ticketId}}",
						"title"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}